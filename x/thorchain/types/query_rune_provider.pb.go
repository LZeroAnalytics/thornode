// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/query_rune_provider.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QueryRuneProviderRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Height  string `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *QueryRuneProviderRequest) Reset()         { *m = QueryRuneProviderRequest{} }
func (m *QueryRuneProviderRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRuneProviderRequest) ProtoMessage()    {}
func (*QueryRuneProviderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fba1a165c6e1b8d, []int{0}
}
func (m *QueryRuneProviderRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryRuneProviderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryRuneProviderRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryRuneProviderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRuneProviderRequest.Merge(m, src)
}
func (m *QueryRuneProviderRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryRuneProviderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRuneProviderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRuneProviderRequest proto.InternalMessageInfo

func (m *QueryRuneProviderRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *QueryRuneProviderRequest) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

type QueryRuneProviderResponse struct {
	RuneAddress        string `protobuf:"bytes,1,opt,name=rune_address,json=runeAddress,proto3" json:"rune_address"`
	Units              string `protobuf:"bytes,2,opt,name=units,proto3" json:"units"`
	Value              string `protobuf:"bytes,3,opt,name=value,proto3" json:"value"`
	Pnl                string `protobuf:"bytes,4,opt,name=pnl,proto3" json:"pnl"`
	DepositAmount      string `protobuf:"bytes,5,opt,name=deposit_amount,json=depositAmount,proto3" json:"deposit_amount"`
	WithdrawAmount     string `protobuf:"bytes,6,opt,name=withdraw_amount,json=withdrawAmount,proto3" json:"withdraw_amount"`
	LastDepositHeight  int64  `protobuf:"varint,7,opt,name=last_deposit_height,json=lastDepositHeight,proto3" json:"last_deposit_height"`
	LastWithdrawHeight int64  `protobuf:"varint,8,opt,name=last_withdraw_height,json=lastWithdrawHeight,proto3" json:"last_withdraw_height"`
}

func (m *QueryRuneProviderResponse) Reset()         { *m = QueryRuneProviderResponse{} }
func (m *QueryRuneProviderResponse) String() string { return proto.CompactTextString(m) }
func (*QueryRuneProviderResponse) ProtoMessage()    {}
func (*QueryRuneProviderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fba1a165c6e1b8d, []int{1}
}
func (m *QueryRuneProviderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryRuneProviderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryRuneProviderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryRuneProviderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRuneProviderResponse.Merge(m, src)
}
func (m *QueryRuneProviderResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryRuneProviderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRuneProviderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRuneProviderResponse proto.InternalMessageInfo

func (m *QueryRuneProviderResponse) GetRuneAddress() string {
	if m != nil {
		return m.RuneAddress
	}
	return ""
}

func (m *QueryRuneProviderResponse) GetUnits() string {
	if m != nil {
		return m.Units
	}
	return ""
}

func (m *QueryRuneProviderResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *QueryRuneProviderResponse) GetPnl() string {
	if m != nil {
		return m.Pnl
	}
	return ""
}

func (m *QueryRuneProviderResponse) GetDepositAmount() string {
	if m != nil {
		return m.DepositAmount
	}
	return ""
}

func (m *QueryRuneProviderResponse) GetWithdrawAmount() string {
	if m != nil {
		return m.WithdrawAmount
	}
	return ""
}

func (m *QueryRuneProviderResponse) GetLastDepositHeight() int64 {
	if m != nil {
		return m.LastDepositHeight
	}
	return 0
}

func (m *QueryRuneProviderResponse) GetLastWithdrawHeight() int64 {
	if m != nil {
		return m.LastWithdrawHeight
	}
	return 0
}

type QueryRuneProvidersRequest struct {
	Height string `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *QueryRuneProvidersRequest) Reset()         { *m = QueryRuneProvidersRequest{} }
func (m *QueryRuneProvidersRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRuneProvidersRequest) ProtoMessage()    {}
func (*QueryRuneProvidersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fba1a165c6e1b8d, []int{2}
}
func (m *QueryRuneProvidersRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryRuneProvidersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryRuneProvidersRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryRuneProvidersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRuneProvidersRequest.Merge(m, src)
}
func (m *QueryRuneProvidersRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryRuneProvidersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRuneProvidersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRuneProvidersRequest proto.InternalMessageInfo

func (m *QueryRuneProvidersRequest) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

type QueryRuneProvidersResponse struct {
	Providers []*QueryRuneProviderResponse `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (m *QueryRuneProvidersResponse) Reset()         { *m = QueryRuneProvidersResponse{} }
func (m *QueryRuneProvidersResponse) String() string { return proto.CompactTextString(m) }
func (*QueryRuneProvidersResponse) ProtoMessage()    {}
func (*QueryRuneProvidersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fba1a165c6e1b8d, []int{3}
}
func (m *QueryRuneProvidersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryRuneProvidersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryRuneProvidersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryRuneProvidersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRuneProvidersResponse.Merge(m, src)
}
func (m *QueryRuneProvidersResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryRuneProvidersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRuneProvidersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRuneProvidersResponse proto.InternalMessageInfo

func (m *QueryRuneProvidersResponse) GetProviders() []*QueryRuneProviderResponse {
	if m != nil {
		return m.Providers
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryRuneProviderRequest)(nil), "types.QueryRuneProviderRequest")
	proto.RegisterType((*QueryRuneProviderResponse)(nil), "types.QueryRuneProviderResponse")
	proto.RegisterType((*QueryRuneProvidersRequest)(nil), "types.QueryRuneProvidersRequest")
	proto.RegisterType((*QueryRuneProvidersResponse)(nil), "types.QueryRuneProvidersResponse")
}

func init() { proto.RegisterFile("types/query_rune_provider.proto", fileDescriptor_6fba1a165c6e1b8d) }

var fileDescriptor_6fba1a165c6e1b8d = []byte{
	// 443 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x1b, 0x42, 0x5b, 0xea, 0x85, 0x05, 0xbc, 0x2b, 0xf0, 0xee, 0x21, 0xae, 0x7a, 0xea,
	0x29, 0x91, 0xe8, 0x09, 0x09, 0x21, 0x6d, 0x84, 0xc4, 0x1f, 0x71, 0x00, 0x5f, 0x90, 0x10, 0x52,
	0x94, 0xdd, 0x58, 0x49, 0xa4, 0xac, 0x9d, 0xb5, 0x9d, 0x2d, 0x7d, 0x0b, 0xde, 0x87, 0x17, 0xe0,
	0xd8, 0x23, 0xa7, 0x08, 0xb5, 0xb7, 0x3c, 0x05, 0xb2, 0xe3, 0x50, 0x5a, 0x65, 0x2f, 0xb1, 0xe7,
	0xf7, 0xcd, 0x37, 0x13, 0x79, 0x06, 0x60, 0xb5, 0x2a, 0xa9, 0x0c, 0x6e, 0x2a, 0x2a, 0x56, 0x91,
	0xa8, 0x18, 0x8d, 0x4a, 0xc1, 0x6f, 0xf3, 0x84, 0x0a, 0xbf, 0x14, 0x5c, 0x71, 0x38, 0x34, 0x09,
	0xe7, 0xa7, 0x29, 0x4f, 0xb9, 0x21, 0x81, 0xbe, 0xb5, 0xe2, 0xec, 0x23, 0x40, 0x9f, 0xb5, 0x93,
	0x54, 0x8c, 0x7e, 0xb2, 0x3e, 0x42, 0x6f, 0x2a, 0x2a, 0x15, 0x44, 0x60, 0x1c, 0x27, 0x89, 0xa0,
	0x52, 0x22, 0x67, 0xea, 0xcc, 0x27, 0xa4, 0x0b, 0xe1, 0x33, 0x30, 0xca, 0x68, 0x9e, 0x66, 0x0a,
	0xdd, 0x33, 0x82, 0x8d, 0x66, 0x3f, 0x5d, 0x70, 0xd6, 0x53, 0x4e, 0x96, 0x9c, 0x49, 0x0a, 0x17,
	0xe0, 0xa1, 0xf9, 0xbf, 0xbd, 0xa2, 0xe1, 0x93, 0xa6, 0xc6, 0x7b, 0x9c, 0x1c, 0xe9, 0xe8, 0xc2,
	0xb6, 0xc2, 0x60, 0x58, 0xb1, 0x5c, 0xc9, 0xb6, 0x53, 0x38, 0x69, 0x6a, 0xdc, 0x02, 0xd2, 0x1e,
	0x3a, 0xe1, 0x36, 0x2e, 0x2a, 0x8a, 0xdc, 0x5d, 0x82, 0x01, 0xa4, 0x3d, 0xe0, 0x19, 0x70, 0x4b,
	0x56, 0xa0, 0xfb, 0x46, 0x1e, 0x37, 0x35, 0xd6, 0x21, 0xd1, 0x1f, 0xf8, 0x12, 0x1c, 0x27, 0xb4,
	0xe4, 0x32, 0x57, 0x51, 0x7c, 0xcd, 0x2b, 0xa6, 0xd0, 0xd0, 0x64, 0xc1, 0xa6, 0xc6, 0x07, 0x0a,
	0x79, 0x64, 0xe3, 0x0b, 0x13, 0xc2, 0x57, 0xe0, 0xf1, 0x32, 0x57, 0x59, 0x22, 0xe2, 0x65, 0xe7,
	0x1d, 0x19, 0xef, 0x49, 0x53, 0xe3, 0x43, 0x89, 0x1c, 0x77, 0xc0, 0xba, 0xdf, 0x82, 0x93, 0x22,
	0x96, 0x2a, 0xea, 0x7a, 0xd8, 0xd7, 0x1c, 0x4f, 0x9d, 0xb9, 0x1b, 0x3e, 0x6f, 0x6a, 0xdc, 0x27,
	0x93, 0xa7, 0x1a, 0xbe, 0x69, 0xd9, 0x3b, 0x83, 0xe0, 0x07, 0x70, 0x6a, 0x32, 0xff, 0x35, 0xb4,
	0x95, 0x1e, 0x98, 0x4a, 0xa8, 0xa9, 0x71, 0xaf, 0x4e, 0xa0, 0xa6, 0x5f, 0x2c, 0x6c, 0x6b, 0xcd,
	0x16, 0x3d, 0xc3, 0x93, 0xdd, 0x32, 0xec, 0x46, 0xee, 0xec, 0x8d, 0xfc, 0x1b, 0x38, 0xef, 0x33,
	0xd9, 0x91, 0xbf, 0x06, 0x93, 0x6e, 0x1b, 0xf5, 0xbc, 0xdd, 0xf9, 0xd1, 0x8b, 0xa9, 0x6f, 0xf6,
	0xd1, 0xbf, 0x73, 0x4f, 0xc8, 0xce, 0x12, 0xbe, 0xff, 0xb5, 0xf1, 0x9c, 0xf5, 0xc6, 0x73, 0xfe,
	0x6c, 0x3c, 0xe7, 0xc7, 0xd6, 0x1b, 0xac, 0xb7, 0xde, 0xe0, 0xf7, 0xd6, 0x1b, 0x7c, 0x0d, 0xd2,
	0x5c, 0x15, 0xf1, 0xa5, 0x7f, 0xc5, 0xaf, 0x03, 0x95, 0x71, 0x71, 0x95, 0xc5, 0x39, 0x33, 0x37,
	0xc6, 0x13, 0x1a, 0x7c, 0xff, 0x1f, 0xea, 0x7e, 0x97, 0x23, 0xb3, 0xf0, 0x8b, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x72, 0x88, 0x89, 0x57, 0x30, 0x03, 0x00, 0x00,
}

func (m *QueryRuneProviderRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryRuneProviderRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryRuneProviderRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Height) > 0 {
		i -= len(m.Height)
		copy(dAtA[i:], m.Height)
		i = encodeVarintQueryRuneProvider(dAtA, i, uint64(len(m.Height)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQueryRuneProvider(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryRuneProviderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryRuneProviderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryRuneProviderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastWithdrawHeight != 0 {
		i = encodeVarintQueryRuneProvider(dAtA, i, uint64(m.LastWithdrawHeight))
		i--
		dAtA[i] = 0x40
	}
	if m.LastDepositHeight != 0 {
		i = encodeVarintQueryRuneProvider(dAtA, i, uint64(m.LastDepositHeight))
		i--
		dAtA[i] = 0x38
	}
	if len(m.WithdrawAmount) > 0 {
		i -= len(m.WithdrawAmount)
		copy(dAtA[i:], m.WithdrawAmount)
		i = encodeVarintQueryRuneProvider(dAtA, i, uint64(len(m.WithdrawAmount)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DepositAmount) > 0 {
		i -= len(m.DepositAmount)
		copy(dAtA[i:], m.DepositAmount)
		i = encodeVarintQueryRuneProvider(dAtA, i, uint64(len(m.DepositAmount)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Pnl) > 0 {
		i -= len(m.Pnl)
		copy(dAtA[i:], m.Pnl)
		i = encodeVarintQueryRuneProvider(dAtA, i, uint64(len(m.Pnl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintQueryRuneProvider(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Units) > 0 {
		i -= len(m.Units)
		copy(dAtA[i:], m.Units)
		i = encodeVarintQueryRuneProvider(dAtA, i, uint64(len(m.Units)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RuneAddress) > 0 {
		i -= len(m.RuneAddress)
		copy(dAtA[i:], m.RuneAddress)
		i = encodeVarintQueryRuneProvider(dAtA, i, uint64(len(m.RuneAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryRuneProvidersRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryRuneProvidersRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryRuneProvidersRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Height) > 0 {
		i -= len(m.Height)
		copy(dAtA[i:], m.Height)
		i = encodeVarintQueryRuneProvider(dAtA, i, uint64(len(m.Height)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryRuneProvidersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryRuneProvidersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryRuneProvidersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Providers) > 0 {
		for iNdEx := len(m.Providers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Providers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQueryRuneProvider(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQueryRuneProvider(dAtA []byte, offset int, v uint64) int {
	offset -= sovQueryRuneProvider(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryRuneProviderRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQueryRuneProvider(uint64(l))
	}
	l = len(m.Height)
	if l > 0 {
		n += 1 + l + sovQueryRuneProvider(uint64(l))
	}
	return n
}

func (m *QueryRuneProviderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RuneAddress)
	if l > 0 {
		n += 1 + l + sovQueryRuneProvider(uint64(l))
	}
	l = len(m.Units)
	if l > 0 {
		n += 1 + l + sovQueryRuneProvider(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovQueryRuneProvider(uint64(l))
	}
	l = len(m.Pnl)
	if l > 0 {
		n += 1 + l + sovQueryRuneProvider(uint64(l))
	}
	l = len(m.DepositAmount)
	if l > 0 {
		n += 1 + l + sovQueryRuneProvider(uint64(l))
	}
	l = len(m.WithdrawAmount)
	if l > 0 {
		n += 1 + l + sovQueryRuneProvider(uint64(l))
	}
	if m.LastDepositHeight != 0 {
		n += 1 + sovQueryRuneProvider(uint64(m.LastDepositHeight))
	}
	if m.LastWithdrawHeight != 0 {
		n += 1 + sovQueryRuneProvider(uint64(m.LastWithdrawHeight))
	}
	return n
}

func (m *QueryRuneProvidersRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Height)
	if l > 0 {
		n += 1 + l + sovQueryRuneProvider(uint64(l))
	}
	return n
}

func (m *QueryRuneProvidersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Providers) > 0 {
		for _, e := range m.Providers {
			l = e.Size()
			n += 1 + l + sovQueryRuneProvider(uint64(l))
		}
	}
	return n
}

func sovQueryRuneProvider(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQueryRuneProvider(x uint64) (n int) {
	return sovQueryRuneProvider(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryRuneProviderRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryRuneProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryRuneProviderRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryRuneProviderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Height = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryRuneProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryRuneProviderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryRuneProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryRuneProviderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryRuneProviderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RuneAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RuneAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Units", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Units = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pnl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pnl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DepositAmount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithdrawAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WithdrawAmount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastDepositHeight", wireType)
			}
			m.LastDepositHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastDepositHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastWithdrawHeight", wireType)
			}
			m.LastWithdrawHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastWithdrawHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQueryRuneProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryRuneProvidersRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryRuneProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryRuneProvidersRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryRuneProvidersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Height = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryRuneProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryRuneProvidersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryRuneProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryRuneProvidersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryRuneProvidersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Providers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Providers = append(m.Providers, &QueryRuneProviderResponse{})
			if err := m.Providers[len(m.Providers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryRuneProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryRuneProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQueryRuneProvider(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQueryRuneProvider
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryRuneProvider
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQueryRuneProvider
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQueryRuneProvider
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQueryRuneProvider
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQueryRuneProvider        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQueryRuneProvider          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQueryRuneProvider = fmt.Errorf("proto: unexpected end of group")
)

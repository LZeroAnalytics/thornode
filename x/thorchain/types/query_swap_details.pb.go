// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/query_swap_details.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QuerySwapDetailsRequest struct {
	TxId   string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Height string `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *QuerySwapDetailsRequest) Reset()         { *m = QuerySwapDetailsRequest{} }
func (m *QuerySwapDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*QuerySwapDetailsRequest) ProtoMessage()    {}
func (*QuerySwapDetailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1886bed404abcbdb, []int{0}
}
func (m *QuerySwapDetailsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySwapDetailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySwapDetailsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySwapDetailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySwapDetailsRequest.Merge(m, src)
}
func (m *QuerySwapDetailsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QuerySwapDetailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySwapDetailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySwapDetailsRequest proto.InternalMessageInfo

func (m *QuerySwapDetailsRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *QuerySwapDetailsRequest) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

type QuerySwapDetailsResponse struct {
	Swap      *MsgSwap `protobuf:"bytes,1,opt,name=swap,proto3" json:"swap,omitempty"`
	Status    string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	QueueType string   `protobuf:"bytes,3,opt,name=queue_type,json=queueType,proto3" json:"queue_type,omitempty"`
}

func (m *QuerySwapDetailsResponse) Reset()         { *m = QuerySwapDetailsResponse{} }
func (m *QuerySwapDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*QuerySwapDetailsResponse) ProtoMessage()    {}
func (*QuerySwapDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1886bed404abcbdb, []int{1}
}
func (m *QuerySwapDetailsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySwapDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySwapDetailsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySwapDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySwapDetailsResponse.Merge(m, src)
}
func (m *QuerySwapDetailsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QuerySwapDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySwapDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySwapDetailsResponse proto.InternalMessageInfo

func (m *QuerySwapDetailsResponse) GetSwap() *MsgSwap {
	if m != nil {
		return m.Swap
	}
	return nil
}

func (m *QuerySwapDetailsResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *QuerySwapDetailsResponse) GetQueueType() string {
	if m != nil {
		return m.QueueType
	}
	return ""
}

func init() {
	proto.RegisterType((*QuerySwapDetailsRequest)(nil), "types.QuerySwapDetailsRequest")
	proto.RegisterType((*QuerySwapDetailsResponse)(nil), "types.QuerySwapDetailsResponse")
}

func init() { proto.RegisterFile("types/query_swap_details.proto", fileDescriptor_1886bed404abcbdb) }

var fileDescriptor_1886bed404abcbdb = []byte{
	// 276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x1b, 0x6d, 0x0b, 0x5d, 0xc1, 0x43, 0x2c, 0x1a, 0x0a, 0x2e, 0x92, 0x93, 0xa7, 0x04,
	0xda, 0x37, 0x10, 0x11, 0x04, 0x3d, 0x18, 0x3d, 0x79, 0x09, 0xdb, 0x66, 0xd8, 0x04, 0xda, 0xec,
	0x26, 0x3b, 0x6b, 0x93, 0xb7, 0xf0, 0xb1, 0x3c, 0xf6, 0xe8, 0x51, 0x92, 0x17, 0x91, 0x9d, 0x28,
	0x08, 0xde, 0x66, 0xbe, 0x3f, 0xff, 0x97, 0x61, 0x19, 0xc7, 0x56, 0x83, 0x89, 0x2b, 0x0b, 0x75,
	0x9b, 0x9a, 0xbd, 0xd0, 0x69, 0x06, 0x28, 0x8a, 0xad, 0x89, 0x74, 0xad, 0x50, 0xf9, 0x13, 0xca,
	0x17, 0x73, 0xa9, 0xa4, 0x22, 0x12, 0xbb, 0x69, 0x08, 0x17, 0xf3, 0xa1, 0xbc, 0x33, 0x92, 0xaa,
	0x03, 0x0d, 0xef, 0xd8, 0xc5, 0x93, 0xd3, 0x3d, 0xef, 0x85, 0xbe, 0x1d, 0x64, 0x09, 0x54, 0x16,
	0x0c, 0xfa, 0x67, 0x6c, 0x82, 0x4d, 0x5a, 0x64, 0x81, 0x77, 0xe5, 0x5d, 0xcf, 0x92, 0x31, 0x36,
	0xf7, 0x99, 0x7f, 0xce, 0xa6, 0x39, 0x14, 0x32, 0xc7, 0xe0, 0x88, 0xe8, 0xcf, 0x16, 0x5a, 0x16,
	0xfc, 0xf7, 0x18, 0xad, 0x4a, 0x03, 0x7e, 0xc8, 0xc6, 0xee, 0x8f, 0xe4, 0x39, 0x59, 0x9e, 0x46,
	0x74, 0x48, 0xf4, 0x68, 0xa4, 0xfb, 0x38, 0xa1, 0xcc, 0x79, 0x0d, 0x0a, 0xb4, 0xe6, 0xd7, 0x3b,
	0x6c, 0xfe, 0x25, 0x63, 0x95, 0x05, 0x0b, 0xa9, 0x2b, 0x05, 0xc7, 0x94, 0xcd, 0x88, 0xbc, 0xb4,
	0x1a, 0x6e, 0x1e, 0x3e, 0x3a, 0xee, 0x1d, 0x3a, 0xee, 0x7d, 0x75, 0xdc, 0x7b, 0xef, 0xf9, 0xe8,
	0xd0, 0xf3, 0xd1, 0x67, 0xcf, 0x47, 0xaf, 0x4b, 0x59, 0xe0, 0x56, 0xac, 0xa3, 0x8d, 0xda, 0xc5,
	0x98, 0xab, 0x7a, 0x93, 0x8b, 0xa2, 0xa4, 0xa9, 0x54, 0x19, 0xc4, 0x6f, 0xab, 0xb8, 0xf9, 0xcb,
	0xdd, 0x49, 0xeb, 0x29, 0xbd, 0xc9, 0xea, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x44, 0x24, 0x15, 0xe6,
	0x68, 0x01, 0x00, 0x00,
}

func (m *QuerySwapDetailsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySwapDetailsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySwapDetailsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Height) > 0 {
		i -= len(m.Height)
		copy(dAtA[i:], m.Height)
		i = encodeVarintQuerySwapDetails(dAtA, i, uint64(len(m.Height)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TxId) > 0 {
		i -= len(m.TxId)
		copy(dAtA[i:], m.TxId)
		i = encodeVarintQuerySwapDetails(dAtA, i, uint64(len(m.TxId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuerySwapDetailsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySwapDetailsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySwapDetailsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.QueueType) > 0 {
		i -= len(m.QueueType)
		copy(dAtA[i:], m.QueueType)
		i = encodeVarintQuerySwapDetails(dAtA, i, uint64(len(m.QueueType)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintQuerySwapDetails(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x12
	}
	if m.Swap != nil {
		{
			size, err := m.Swap.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuerySwapDetails(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuerySwapDetails(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuerySwapDetails(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QuerySwapDetailsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TxId)
	if l > 0 {
		n += 1 + l + sovQuerySwapDetails(uint64(l))
	}
	l = len(m.Height)
	if l > 0 {
		n += 1 + l + sovQuerySwapDetails(uint64(l))
	}
	return n
}

func (m *QuerySwapDetailsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Swap != nil {
		l = m.Swap.Size()
		n += 1 + l + sovQuerySwapDetails(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovQuerySwapDetails(uint64(l))
	}
	l = len(m.QueueType)
	if l > 0 {
		n += 1 + l + sovQuerySwapDetails(uint64(l))
	}
	return n
}

func sovQuerySwapDetails(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuerySwapDetails(x uint64) (n int) {
	return sovQuerySwapDetails(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QuerySwapDetailsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySwapDetails
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySwapDetailsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySwapDetailsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwapDetails
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySwapDetails
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwapDetails
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwapDetails
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySwapDetails
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwapDetails
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Height = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySwapDetails(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySwapDetails
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuerySwapDetailsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySwapDetails
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySwapDetailsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySwapDetailsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Swap", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwapDetails
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuerySwapDetails
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwapDetails
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Swap == nil {
				m.Swap = &MsgSwap{}
			}
			if err := m.Swap.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwapDetails
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySwapDetails
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwapDetails
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueueType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySwapDetails
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySwapDetails
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySwapDetails
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.QueueType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySwapDetails(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySwapDetails
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuerySwapDetails(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuerySwapDetails
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuerySwapDetails
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuerySwapDetails
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuerySwapDetails
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuerySwapDetails
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuerySwapDetails
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuerySwapDetails        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuerySwapDetails          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuerySwapDetails = fmt.Errorf("proto: unexpected end of group")
)

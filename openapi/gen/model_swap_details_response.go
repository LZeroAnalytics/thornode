/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SwapDetailsResponse struct for SwapDetailsResponse
type SwapDetailsResponse struct {
	Swap *MsgSwap `json:"swap,omitempty"`
	// Current status of the swap
	Status *string `json:"status,omitempty"`
	// Type of queue the swap is in
	QueueType *string `json:"queue_type,omitempty"`
}

// NewSwapDetailsResponse instantiates a new SwapDetailsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSwapDetailsResponse() *SwapDetailsResponse {
	this := SwapDetailsResponse{}
	return &this
}

// NewSwapDetailsResponseWithDefaults instantiates a new SwapDetailsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSwapDetailsResponseWithDefaults() *SwapDetailsResponse {
	this := SwapDetailsResponse{}
	return &this
}

// GetSwap returns the Swap field value if set, zero value otherwise.
func (o *SwapDetailsResponse) GetSwap() MsgSwap {
	if o == nil || o.Swap == nil {
		var ret MsgSwap
		return ret
	}
	return *o.Swap
}

// GetSwapOk returns a tuple with the Swap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwapDetailsResponse) GetSwapOk() (*MsgSwap, bool) {
	if o == nil || o.Swap == nil {
		return nil, false
	}
	return o.Swap, true
}

// HasSwap returns a boolean if a field has been set.
func (o *SwapDetailsResponse) HasSwap() bool {
	if o != nil && o.Swap != nil {
		return true
	}

	return false
}

// SetSwap gets a reference to the given MsgSwap and assigns it to the Swap field.
func (o *SwapDetailsResponse) SetSwap(v MsgSwap) {
	o.Swap = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SwapDetailsResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwapDetailsResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SwapDetailsResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SwapDetailsResponse) SetStatus(v string) {
	o.Status = &v
}

// GetQueueType returns the QueueType field value if set, zero value otherwise.
func (o *SwapDetailsResponse) GetQueueType() string {
	if o == nil || o.QueueType == nil {
		var ret string
		return ret
	}
	return *o.QueueType
}

// GetQueueTypeOk returns a tuple with the QueueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwapDetailsResponse) GetQueueTypeOk() (*string, bool) {
	if o == nil || o.QueueType == nil {
		return nil, false
	}
	return o.QueueType, true
}

// HasQueueType returns a boolean if a field has been set.
func (o *SwapDetailsResponse) HasQueueType() bool {
	if o != nil && o.QueueType != nil {
		return true
	}

	return false
}

// SetQueueType gets a reference to the given string and assigns it to the QueueType field.
func (o *SwapDetailsResponse) SetQueueType(v string) {
	o.QueueType = &v
}

func (o SwapDetailsResponse) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Swap != nil {
		toSerialize["swap"] = o.Swap
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.QueueType != nil {
		toSerialize["queue_type"] = o.QueueType
	}
	return json.Marshal(toSerialize)
}

type NullableSwapDetailsResponse struct {
	value *SwapDetailsResponse
	isSet bool
}

func (v NullableSwapDetailsResponse) Get() *SwapDetailsResponse {
	return v.value
}

func (v *NullableSwapDetailsResponse) Set(val *SwapDetailsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSwapDetailsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSwapDetailsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSwapDetailsResponse(val *SwapDetailsResponse) *NullableSwapDetailsResponse {
	return &NullableSwapDetailsResponse{value: val, isSet: true}
}

func (v NullableSwapDetailsResponse) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSwapDetailsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


